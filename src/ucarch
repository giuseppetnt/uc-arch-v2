#!/bin/bash

# Show confirmation message
show_confirmation() {
  whiptail --title "Confirm" --yesno "$1" 10 60
  return $?
}

# Show information message
show_message() {
  whiptail --title "Info" --msgbox "$1" 10 60
}

# Get the necessary packages
get_unnecessary_packages() {
  # list packages installed
  all_packages=$(pacman -Qqe)

  # Essential package for arch linux
  essential_packages=(
    "base"
    "linux"
    "pacman"
    "glibc"
  )

  # Search for orphaned packages
  unnecessary_packages=()
  for package in $all_packages; do
    if ! printf '%s\n' "${essential_packages[@]}" | grep -qx "$package"; then
      unnecessary_packages+=("$package")
    fi
  done

  # List orphaned packages
  echo "${unnecessary_packages[@]}"
}

# Show ASCII art
show_ascii_art() {
  # Color of ASCII art
  green=$(tput setaf 2)
  blue=$(tput setaf 4)
  reset=$(tput sgr0)


 echo "${green}"
 echo '          _______  _______  _______  _______                    _______'
 echo '|\     /|(  ____ \(  ___  )(  ____ )(  ____ \|\     /||\     /|/ ___   )'
 echo '| )   ( || (    \/| (   ) || (    )|| (    \/| )   ( || )   ( |\/   )  |'
 echo '| |   | || |      | (___) || (____)|| |      | (___) || |   | |    /   )'
 echo '| |   | || |      |  ___  ||     __)| |      |  ___  |( (   ) )  _/   /'
 echo '| |   | || |      | (   ) || (\ (   | |      | (   ) | \ \_/ /  /   _/'  
 echo '| (___) || (____/\| )   ( || ) \ \__| (____/\| )   ( |  \   /  (   (__/\'
 echo '(_______)(_______/|/     \||/   \__/(_______/|/     \|   \_/   \_______/'

 echo "${blue}                         UC-ARCH-V2${reset}"
 echo
}

# VShow ASCII art at the top of the script
show_ascii_art

# Show main menu
while true; do
  choice=$(whiptail --title "Main menu" --menu "Select an option:" 15 60 6 \
    "1" "Pacman update" \
    "2" "AUR update" \
    "3" "Show failed services" \
    "4" "Show orphaned package" \
    "5" "Delete orphaned package" \
    "6" "Clean cache" \
    "7" "ucarch version" \
    "8" "Exit" 3>&1 1>&2 2>&3)

  case $choice in
    1)
      if show_confirmation "Update with pacman?"; then
        echo "Updating..."
        # pacman update
        sudo pacman -Syu
        show_message "Update done!"
      else
        show_message "Canceling..."
      fi
      ;;
    2)
      if show_confirmation "Update AUR"; then
        echo "Updating..."
        # yay update
        sudo yay -Syu
        show_message "Update done!"
      else
        show_message "Canceling..."
      fi
      ;;
    3)
      if show_confirmation "Writing the log file"; then
        echo "Systemctl --failed"
        # Systemctl
        systemctl --failed > failed_services.txt
        whiptail --title "Failed services" --textbox failed_services.txt 20 80
        rm failed_services.txt
        show_message "Done!"
      else
        show_message "Canceling..."
      fi
      ;;
    4)
      unnecessary_packages_list=$(get_unnecessary_packages)
      if [ -n "$unnecessary_packages_list" ]; then
        show_message "List of orphaned package:\n\n$unnecessary_packages_list"
      else
        show_message "No oprhaned package."
      fi
      ;;
    5)
      if show_confirmation "Delete oprhaned package?"; then
        echo "Deleting orphaned packages..."
        # remove orphaned
        orphans=$(pacman -Qdtq)
        if [ -n "$orphans" ]; then
            sudo pacman -Rns $orphans
            echo "Cleaning done!"
        else
            echo "No oprhaned package."
        fi
        show_message "Deleting done."
      else
        show_message "No action."
      fi
      ;;
    6)
      if show_confirmation "Clean cache?"; then
        echo "Cache cleaning..."
        # Cache cleaning
        sudo pacman -Sc
        show_message "Cache cleaning succeded!"
      else
        show_message "Canceling..."
      fi
      ;;
    7)
      package_version=$(pacman -Q ucarch 2>/dev/null | awk '{print $2}')
      if [[ -n $package_version ]]; then
        show_message "ucarch version: $package_version"
      else
        show_message "ucarch not installed"
      fi
      ;;
    8)
      echo "${green}Goodbye!${reset}"
      exit 0
      ;;
    *)
      show_message "Not a valid option. Retry"
      ;;
  esac
done
